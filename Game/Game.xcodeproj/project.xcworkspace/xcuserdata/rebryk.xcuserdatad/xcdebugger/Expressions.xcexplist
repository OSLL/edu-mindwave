<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "Game.GameScene.makeGradientBackground (Game.GameScene)() -&gt; ():GameScene.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.GameScene.createLevel (Game.GameScene)(Swift.String) -&gt; ():GameScene.swift">
         <PersistentStrings>
            <PersistentString
               value = "NSBundle.mainBundle()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.LevelLibrary.didMoveToView (Game.LevelLibrary)(ObjectiveC.SKView) -&gt; ():LevelLibrary.swift">
         <PersistentStrings>
            <PersistentString
               value = "fileManager.currentDirectoryPath">
            </PersistentString>
            <PersistentString
               value = "button.frame.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Menu.makeGradientBackground (Game.Menu)() -&gt; ():Menu.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.appDel!.skView!.frame.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.ShadowShapeNode.changeStyle (Game.ShadowShapeNode)() -&gt; ():ShadowShapeNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "fillColor">
            </PersistentString>
            <PersistentString
               value = "settings">
            </PersistentString>
            <PersistentString
               value = "self.fillColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Menu.didMoveToView (Game.Menu)(ObjectiveC.SKView) -&gt; ():Menu.swift">
         <PersistentStrings>
            <PersistentString
               value = "startButton.frame.width">
            </PersistentString>
            <PersistentString
               value = "self.view">
            </PersistentString>
            <PersistentString
               value = "background.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Menu.addButtons (Game.Menu)() -&gt; ():Menu.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.scene!.frame.size.width">
            </PersistentString>
            <PersistentString
               value = "exitButton!.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.GameScene.keyDown (Game.GameScene)(ObjectiveC.NSEvent) -&gt; ():GameScene.swift">
         <PersistentStrings>
            <PersistentString
               value = "player">
            </PersistentString>
            <PersistentString
               value = "theEvent.keyCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Reader.readAction (Game.Reader)() -&gt; Swift.Optional&lt;ObjectiveC.SKAction&gt;:Reader.swift">
         <PersistentStrings>
            <PersistentString
               value = "">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Focus.moveDown (Game.Focus)() -&gt; ():Focus.swift">
         <PersistentStrings>
            <PersistentString
               value = "row">
            </PersistentString>
            <PersistentString
               value = "col">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.GameScene.didMoveToView (Game.GameScene)(ObjectiveC.SKView) -&gt; ():GameScene.swift">
      </ContextState>
      <ContextState
         contextName = "Game.ThinkGear.Connect (Game.ThinkGear)() -&gt; Swift.Bool:ThinkGear.swift">
      </ContextState>
      <ContextState
         contextName = "Game.AppDelegate.tryToConnectMindWave (Game.AppDelegate)() -&gt; ():AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "thinkGear">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "function signature specialization &lt;Arg[0] = Dead, Arg[1] = Value Promoted from InOut&gt; of Game.Screen.(didMoveToView (Game.Screen) -&gt; (ObjectiveC.SKView) -&gt; ()).(closure #1):Screen.swift">
         <PersistentStrings>
            <PersistentString
               value = "image.position">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Menu.keyDown (Game.Menu)(ObjectiveC.NSEvent) -&gt; ():Menu.swift">
         <PersistentStrings>
            <PersistentString
               value = "theEvent.keyCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Button.init (Game.Button.Type)(text : Swift.String, size : C.CGSize, fontName : Swift.String, fontSize : CoreGraphics.CGFloat, fontColor : ObjectiveC.NSColor, buttonAction : () -&gt; ()) -&gt; Game.Button:Button.swift">
         <PersistentStrings>
            <PersistentString
               value = "background.shadowShape.fillColor">
            </PersistentString>
            <PersistentString
               value = "background">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.Focus.moveUp (Game.Focus)() -&gt; ():Focus.swift">
         <PersistentStrings>
            <PersistentString
               value = "row">
            </PersistentString>
            <PersistentString
               value = "col">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.GameScene.update (Game.GameScene)(Swift.Double) -&gt; ():GameScene.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.lastTime">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.LevelLibrary.makeGradientBackground (Game.LevelLibrary)() -&gt; ():LevelLibrary.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.anchorPoint">
            </PersistentString>
            <PersistentString
               value = "self.size">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.YGCamera.move (Game.YGCamera)(C.CGPoint) -&gt; ():Camera.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.position">
            </PersistentString>
            <PersistentString
               value = "position.x - 0.75 * sceneSize.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Game.ShadowLabelNode.changeStyle (Game.ShadowLabelNode)() -&gt; ():ShadowLabelNode.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.fontColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
